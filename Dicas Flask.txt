
upper: colocar os caracteres em caixa alta;
round: arredondar números;
trim: remover espaços do início e do fim do texto;
default('texto exibido por padrão') - quando queremos mostrar algo, caso a variável esteja vazia ou nula.

Tipos de Delimitadores do Jinja2:

{%....%}: usado para inserir estruturas Python dentro de um arquivo html;
{{....}}: usado para facilitar a exibição de código python como um output em um template HTML. Alternativa: {% print(....) %};
{#....#}: usado para adicionar comentários que não serão exibidos no output do template HTML.

readme


JogoTeca
Descrição do Projeto
O JogoTeca é um aplicativo desenvolvido em Flask Python que permite aos usuários armazenar e gerenciar uma biblioteca pessoal de jogos. O sistema oferece funcionalidades básicas de CRUD (Create, Read, Update, Delete), onde os usuários podem cadastrar novos jogos, visualizar sua coleção, editar informações existentes e excluir jogos.

O projeto exige um sistema de login, onde os usuários podem criar uma conta que será armazenada em um banco de dados MySQL com senhas encriptadas para garantir a segurança dos dados.

Na tela principal, os usuários têm acesso à sua coleção de jogos, que é exibida por meio de imagens dos jogos, juntamente com o nome, categoria e o tipo de console associado a cada jogo. Ao lado de cada jogo, há botões para editar e excluir, permitindo que os usuários atualizem ou removam jogos conforme desejado.

Além disso, há um botão "Novo" que direciona os usuários para a tela de cadastro de um novo jogo. Da mesma forma, a lógica do botão "Editar" é aplicada, levando os usuários para a tela de edição de um jogo específico.

Exemplos
A seguir, são fornecidos exemplos visuais das telas principais do JogoTeca:

Tela de Login

Tela Principal (Coleção de Jogos)

Tela de Cadastro de Novo Jogo

Tela de Edição de Jogo Existente

Tecnologias Utilizadas
Backend: Flask (Python)
Banco de Dados: MySQL
Como Executar o Projeto
Clone este repositório em sua máquina local.
Certifique-se de ter o Python e o Flask instalados.
Configure as credenciais do banco de dados no arquivo de configuração correspondente.
Execute o aplicativo Flask utilizando o comando flask run.
Abra o navegador e acesse o endereço indicado pelo Flask.
Contribuindo
Contribuições são bem-vindas! Sinta-se à vontade para enviar pull requests ou relatar problemas encontrados.